{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users data\\\\Rachit\\\\NutriCart Project\\\\nutriCart\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"../components/ui/use-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const navigate = useNavigate();\n\n  // Check if user is authenticated on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const response = await fetch(\"/api/auth/me\", {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              \"Content-Type\": \"application/json\"\n            }\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setUser(data.user);\n          } else {\n            // Token is invalid, remove it\n            localStorage.removeItem(\"token\");\n            setToken(null);\n          }\n        } catch (error) {\n          console.error(\"Auth check error:\", error);\n          localStorage.removeItem(\"token\");\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const response = await fetch(\"/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUser(data.user);\n        setToken(data.token);\n        localStorage.setItem(\"token\", data.token);\n        toast({\n          title: \"Success!\",\n          description: \"Welcome back to NutriCart+!\"\n        });\n        navigate(\"/dashboard\");\n        return {\n          success: true\n        };\n      } else {\n        toast({\n          title: \"Login Failed\",\n          description: data.message || \"Invalid credentials\",\n          variant: \"destructive\"\n        });\n        return {\n          success: false,\n          message: data.message\n        };\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Something went wrong. Please try again.\",\n        variant: \"destructive\"\n      });\n      return {\n        success: false,\n        message: \"Network error\"\n      };\n    }\n  };\n  const signup = async userData => {\n    try {\n      const response = await fetch(\"/api/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUser(data.user);\n        setToken(data.token);\n        localStorage.setItem(\"token\", data.token);\n        toast({\n          title: \"Welcome to NutriCart+!\",\n          description: \"Your account has been created successfully.\"\n        });\n        navigate(\"/dashboard\");\n        return {\n          success: true\n        };\n      } else {\n        toast({\n          title: \"Signup Failed\",\n          description: data.message || \"Something went wrong\",\n          variant: \"destructive\"\n        });\n        return {\n          success: false,\n          message: data.message\n        };\n      }\n    } catch (error) {\n      console.error(\"Signup error:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Something went wrong. Please try again.\",\n        variant: \"destructive\"\n      });\n      return {\n        success: false,\n        message: \"Network error\"\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    toast({\n      title: \"Logged Out\",\n      description: \"You have been logged out successfully.\"\n    });\n    navigate(\"/\");\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await fetch(\"/api/auth/profile\", {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(profileData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUser(data.user);\n        toast({\n          title: \"Profile Updated\",\n          description: \"Your profile has been updated successfully.\"\n        });\n        return {\n          success: true\n        };\n      } else {\n        toast({\n          title: \"Update Failed\",\n          description: data.message || \"Something went wrong\",\n          variant: \"destructive\"\n        });\n        return {\n          success: false,\n          message: data.message\n        };\n      }\n    } catch (error) {\n      console.error(\"Profile update error:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Something went wrong. Please try again.\",\n        variant: \"destructive\"\n      });\n      return {\n        success: false,\n        message: \"Network error\"\n      };\n    }\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      const response = await fetch(\"/api/auth/change-password\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          currentPassword,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        toast({\n          title: \"Password Changed\",\n          description: \"Your password has been updated successfully.\"\n        });\n        return {\n          success: true\n        };\n      } else {\n        toast({\n          title: \"Password Change Failed\",\n          description: data.message || \"Something went wrong\",\n          variant: \"destructive\"\n        });\n        return {\n          success: false,\n          message: data.message\n        };\n      }\n    } catch (error) {\n      console.error(\"Password change error:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Something went wrong. Please try again.\",\n        variant: \"destructive\"\n      });\n      return {\n        success: false,\n        message: \"Network error\"\n      };\n    }\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    signup,\n    logout,\n    updateProfile,\n    changePassword,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"/gqZO8TSHtmKyI/wYjE+rd5J6SQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","navigate","checkAuth","response","fetch","headers","Authorization","ok","data","json","removeItem","error","console","login","email","password","method","body","JSON","stringify","setItem","title","description","success","message","variant","signup","userData","logout","updateProfile","profileData","changePassword","currentPassword","newPassword","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users data/Rachit/NutriCart Project/nutriCart/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"../components/ui/use-toast\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\r\n  const navigate = useNavigate();\r\n\r\n  // Check if user is authenticated on mount\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await fetch(\"/api/auth/me\", {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setUser(data.user);\r\n          } else {\r\n            // Token is invalid, remove it\r\n            localStorage.removeItem(\"token\");\r\n            setToken(null);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Auth check error:\", error);\r\n          localStorage.removeItem(\"token\");\r\n          setToken(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, [token]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch(\"/api/auth/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setUser(data.user);\r\n        setToken(data.token);\r\n        localStorage.setItem(\"token\", data.token);\r\n        toast({\r\n          title: \"Success!\",\r\n          description: \"Welcome back to NutriCart+!\",\r\n        });\r\n        navigate(\"/dashboard\");\r\n        return { success: true };\r\n      } else {\r\n        toast({\r\n          title: \"Login Failed\",\r\n          description: data.message || \"Invalid credentials\",\r\n          variant: \"destructive\",\r\n        });\r\n        return { success: false, message: data.message };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Something went wrong. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return { success: false, message: \"Network error\" };\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    try {\r\n      const response = await fetch(\"/api/auth/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setUser(data.user);\r\n        setToken(data.token);\r\n        localStorage.setItem(\"token\", data.token);\r\n        toast({\r\n          title: \"Welcome to NutriCart+!\",\r\n          description: \"Your account has been created successfully.\",\r\n        });\r\n        navigate(\"/dashboard\");\r\n        return { success: true };\r\n      } else {\r\n        toast({\r\n          title: \"Signup Failed\",\r\n          description: data.message || \"Something went wrong\",\r\n          variant: \"destructive\",\r\n        });\r\n        return { success: false, message: data.message };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Signup error:\", error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Something went wrong. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return { success: false, message: \"Network error\" };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    toast({\r\n      title: \"Logged Out\",\r\n      description: \"You have been logged out successfully.\",\r\n    });\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await fetch(\"/api/auth/profile\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(profileData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setUser(data.user);\r\n        toast({\r\n          title: \"Profile Updated\",\r\n          description: \"Your profile has been updated successfully.\",\r\n        });\r\n        return { success: true };\r\n      } else {\r\n        toast({\r\n          title: \"Update Failed\",\r\n          description: data.message || \"Something went wrong\",\r\n          variant: \"destructive\",\r\n        });\r\n        return { success: false, message: data.message };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Profile update error:\", error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Something went wrong. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return { success: false, message: \"Network error\" };\r\n    }\r\n  };\r\n\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      const response = await fetch(\"/api/auth/change-password\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ currentPassword, newPassword }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        toast({\r\n          title: \"Password Changed\",\r\n          description: \"Your password has been updated successfully.\",\r\n        });\r\n        return { success: true };\r\n      } else {\r\n        toast({\r\n          title: \"Password Change Failed\",\r\n          description: data.message || \"Something went wrong\",\r\n          variant: \"destructive\",\r\n        });\r\n        return { success: false, message: data.message };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Password change error:\", error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Something went wrong. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return { success: false, message: \"Network error\" };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    signup,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n    isAuthenticated: !!user,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}