{"ast":null,"code":"import _objectSpread from\"C:/Users data/Rachit/NutriCart Project/nutriCart/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from\"react\";import{authAPI}from\"../services/api\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);// Check for existing token on app load\nuseEffect(()=>{const storedToken=localStorage.getItem(\"nutriCart_token\");const storedUser=localStorage.getItem(\"nutriCart_user\");if(storedToken&&storedUser){try{const userData=JSON.parse(storedUser);setToken(storedToken);setUser(userData);setIsAuthenticated(true);}catch(error){console.error(\"Error parsing stored user data:\",error);localStorage.removeItem(\"nutriCart_token\");localStorage.removeItem(\"nutriCart_user\");}}setLoading(false);},[]);const login=async(email,password)=>{try{setLoading(true);const response=await authAPI.login(email,password);const{user:userData,token:authToken}=response;// Store in localStorage\nlocalStorage.setItem(\"nutriCart_token\",authToken);localStorage.setItem(\"nutriCart_user\",JSON.stringify(userData));// Update state\nsetToken(authToken);setUser(userData);setIsAuthenticated(true);return{success:true,user:userData};}catch(error){console.error(\"Login error:\",error);throw error;}finally{setLoading(false);}};const signup=async userData=>{try{setLoading(true);const response=await authAPI.register(userData);const{user:newUser,token:authToken}=response;// Store in localStorage\nlocalStorage.setItem(\"nutriCart_token\",authToken);localStorage.setItem(\"nutriCart_user\",JSON.stringify(newUser));// Update state\nsetToken(authToken);setUser(newUser);setIsAuthenticated(true);return{success:true,user:newUser};}catch(error){console.error(\"Signup error:\",error);throw error;}finally{setLoading(false);}};const updateProfile=async profileData=>{try{setLoading(true);const updatedUser=await authAPI.updateProfile(user.id,profileData);// Update stored user data\nconst newUserData=_objectSpread(_objectSpread({},user),updatedUser);localStorage.setItem(\"nutriCart_user\",JSON.stringify(newUserData));// Update state\nsetUser(newUserData);return{success:true,user:newUserData};}catch(error){console.error(\"Profile update error:\",error);throw error;}finally{setLoading(false);}};const logout=()=>{// Clear localStorage\nlocalStorage.removeItem(\"nutriCart_token\");localStorage.removeItem(\"nutriCart_user\");// Clear state\nsetToken(null);setUser(null);setIsAuthenticated(false);};const refreshUser=async()=>{if(!(user!==null&&user!==void 0&&user.id))return;try{const userData=await authAPI.getUser(user.id);const newUserData=_objectSpread(_objectSpread({},user),userData);localStorage.setItem(\"nutriCart_user\",JSON.stringify(newUserData));setUser(newUserData);}catch(error){console.error(\"Error refreshing user data:\",error);// If refresh fails, logout user\nlogout();}};const value={user,token,isAuthenticated,loading,login,signup,logout,updateProfile,refreshUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","isAuthenticated","setIsAuthenticated","loading","setLoading","storedToken","localStorage","getItem","storedUser","userData","JSON","parse","error","console","removeItem","login","email","password","response","authToken","setItem","stringify","success","signup","register","newUser","updateProfile","profileData","updatedUser","id","newUserData","_objectSpread","logout","refreshUser","getUser","value","Provider"],"sources":["C:/Users data/Rachit/NutriCart Project/nutriCart/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { authAPI } from \"../services/api\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check for existing token on app load\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem(\"nutriCart_token\");\r\n    const storedUser = localStorage.getItem(\"nutriCart_user\");\r\n\r\n    if (storedToken && storedUser) {\r\n      try {\r\n        const userData = JSON.parse(storedUser);\r\n        setToken(storedToken);\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n      } catch (error) {\r\n        console.error(\"Error parsing stored user data:\", error);\r\n        localStorage.removeItem(\"nutriCart_token\");\r\n        localStorage.removeItem(\"nutriCart_user\");\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await authAPI.login(email, password);\r\n\r\n      const { user: userData, token: authToken } = response;\r\n\r\n      // Store in localStorage\r\n      localStorage.setItem(\"nutriCart_token\", authToken);\r\n      localStorage.setItem(\"nutriCart_user\", JSON.stringify(userData));\r\n\r\n      // Update state\r\n      setToken(authToken);\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n\r\n      return { success: true, user: userData };\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await authAPI.register(userData);\r\n\r\n      const { user: newUser, token: authToken } = response;\r\n\r\n      // Store in localStorage\r\n      localStorage.setItem(\"nutriCart_token\", authToken);\r\n      localStorage.setItem(\"nutriCart_user\", JSON.stringify(newUser));\r\n\r\n      // Update state\r\n      setToken(authToken);\r\n      setUser(newUser);\r\n      setIsAuthenticated(true);\r\n\r\n      return { success: true, user: newUser };\r\n    } catch (error) {\r\n      console.error(\"Signup error:\", error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      setLoading(true);\r\n      const updatedUser = await authAPI.updateProfile(user.id, profileData);\r\n\r\n      // Update stored user data\r\n      const newUserData = { ...user, ...updatedUser };\r\n      localStorage.setItem(\"nutriCart_user\", JSON.stringify(newUserData));\r\n\r\n      // Update state\r\n      setUser(newUserData);\r\n\r\n      return { success: true, user: newUserData };\r\n    } catch (error) {\r\n      console.error(\"Profile update error:\", error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    // Clear localStorage\r\n    localStorage.removeItem(\"nutriCart_token\");\r\n    localStorage.removeItem(\"nutriCart_user\");\r\n\r\n    // Clear state\r\n    setToken(null);\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const refreshUser = async () => {\r\n    if (!user?.id) return;\r\n\r\n    try {\r\n      const userData = await authAPI.getUser(user.id);\r\n      const newUserData = { ...user, ...userData };\r\n\r\n      localStorage.setItem(\"nutriCart_user\", JSON.stringify(newUserData));\r\n      setUser(newUserData);\r\n    } catch (error) {\r\n      console.error(\"Error refreshing user data:\", error);\r\n      // If refresh fails, logout user\r\n      logout();\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    signup,\r\n    logout,\r\n    updateProfile,\r\n    refreshUser,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}