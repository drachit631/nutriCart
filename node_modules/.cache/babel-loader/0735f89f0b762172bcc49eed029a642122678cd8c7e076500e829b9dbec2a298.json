{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users data\\\\Rachit\\\\NutriCart Project\\\\nutriCart\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { toast } from \"../components/ui/use-toast\";\nimport { getProductById } from \"../data/mockDatabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState({\n    items: [],\n    total: 0,\n    count: 0\n  });\n  const [loading, setLoading] = useState(false);\n\n  // Load cart from localStorage on init\n  useEffect(() => {\n    const savedCart = localStorage.getItem(\"nutriCart\");\n    if (savedCart) {\n      try {\n        setCart(JSON.parse(savedCart));\n      } catch (error) {\n        console.error(\"Error loading cart from localStorage:\", error);\n        setCart({\n          items: [],\n          total: 0,\n          count: 0\n        });\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"nutriCart\", JSON.stringify(cart));\n  }, [cart]);\n\n  // Calculate cart totals\n  const calculateTotals = items => {\n    const total = items.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    const count = items.reduce((sum, item) => sum + item.quantity, 0);\n    return {\n      total,\n      count\n    };\n  };\n\n  // Add item to cart\n  const addToCart = (productId, quantity = 1) => {\n    const product = getProductById(productId);\n    if (!product) {\n      toast({\n        title: \"Error\",\n        description: \"Product not found\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n    if (!product.inStock) {\n      toast({\n        title: \"Out of Stock\",\n        description: `${product.name} is currently out of stock`,\n        variant: \"destructive\"\n      });\n      return;\n    }\n    setCart(prevCart => {\n      const existingItemIndex = prevCart.items.findIndex(item => item.id === productId);\n      let newItems;\n      if (existingItemIndex > -1) {\n        // Update existing item\n        newItems = [...prevCart.items];\n        newItems[existingItemIndex] = {\n          ...newItems[existingItemIndex],\n          quantity: newItems[existingItemIndex].quantity + quantity\n        };\n      } else {\n        // Add new item\n        newItems = [...prevCart.items, {\n          id: product.id,\n          name: product.name,\n          price: product.price,\n          image: product.image,\n          unit: product.unit,\n          quantity: quantity,\n          category: product.category\n        }];\n      }\n      const {\n        total,\n        count\n      } = calculateTotals(newItems);\n      toast({\n        title: \"Added to Cart\",\n        description: `${product.name} has been added to your cart`,\n        variant: \"default\"\n      });\n      return {\n        items: newItems,\n        total,\n        count\n      };\n    });\n  };\n\n  // Update item quantity\n  const updateQuantity = (productId, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCart(prevCart => {\n      const newItems = prevCart.items.map(item => item.id === productId ? {\n        ...item,\n        quantity: newQuantity\n      } : item);\n      const {\n        total,\n        count\n      } = calculateTotals(newItems);\n      return {\n        items: newItems,\n        total,\n        count\n      };\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = productId => {\n    setCart(prevCart => {\n      const newItems = prevCart.items.filter(item => item.id !== productId);\n      const {\n        total,\n        count\n      } = calculateTotals(newItems);\n      toast({\n        title: \"Removed from Cart\",\n        description: \"Item has been removed from your cart\",\n        variant: \"default\"\n      });\n      return {\n        items: newItems,\n        total,\n        count\n      };\n    });\n  };\n\n  // Clear entire cart\n  const clearCart = () => {\n    setCart({\n      items: [],\n      total: 0,\n      count: 0\n    });\n    toast({\n      title: \"Cart Cleared\",\n      description: \"All items have been removed from your cart\",\n      variant: \"default\"\n    });\n  };\n\n  // Get item quantity by product ID\n  const getItemQuantity = productId => {\n    const item = cart.items.find(item => item.id === productId);\n    return item ? item.quantity : 0;\n  };\n\n  // Check if item is in cart\n  const isInCart = productId => {\n    return cart.items.some(item => item.id === productId);\n  };\n  const value = {\n    cart,\n    loading,\n    addToCart,\n    updateQuantity,\n    removeFromCart,\n    clearCart,\n    getItemQuantity,\n    isInCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 10\n  }, this);\n};\n_s2(CartProvider, \"kCR6A7qhg1PGgSyDeEueXO8HHtg=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","getProductById","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cart","setCart","items","total","count","loading","setLoading","savedCart","localStorage","getItem","JSON","parse","error","console","setItem","stringify","calculateTotals","reduce","sum","item","price","quantity","addToCart","productId","product","title","description","variant","inStock","name","prevCart","existingItemIndex","findIndex","id","newItems","image","unit","category","updateQuantity","newQuantity","removeFromCart","map","filter","clearCart","getItemQuantity","find","isInCart","some","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users data/Rachit/NutriCart Project/nutriCart/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { toast } from \"../components/ui/use-toast\";\nimport { getProductById } from \"../data/mockDatabase\";\n\nconst CartContext = createContext();\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState({ items: [], total: 0, count: 0 });\n  const [loading, setLoading] = useState(false);\n\n  // Load cart from localStorage on init\n  useEffect(() => {\n    const savedCart = localStorage.getItem(\"nutriCart\");\n    if (savedCart) {\n      try {\n        setCart(JSON.parse(savedCart));\n      } catch (error) {\n        console.error(\"Error loading cart from localStorage:\", error);\n        setCart({ items: [], total: 0, count: 0 });\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"nutriCart\", JSON.stringify(cart));\n  }, [cart]);\n\n  // Calculate cart totals\n  const calculateTotals = (items) => {\n    const total = items.reduce(\n      (sum, item) => sum + item.price * item.quantity,\n      0\n    );\n    const count = items.reduce((sum, item) => sum + item.quantity, 0);\n    return { total, count };\n  };\n\n  // Add item to cart\n  const addToCart = (productId, quantity = 1) => {\n    const product = getProductById(productId);\n    if (!product) {\n      toast({\n        title: \"Error\",\n        description: \"Product not found\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (!product.inStock) {\n      toast({\n        title: \"Out of Stock\",\n        description: `${product.name} is currently out of stock`,\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setCart((prevCart) => {\n      const existingItemIndex = prevCart.items.findIndex(\n        (item) => item.id === productId\n      );\n      let newItems;\n\n      if (existingItemIndex > -1) {\n        // Update existing item\n        newItems = [...prevCart.items];\n        newItems[existingItemIndex] = {\n          ...newItems[existingItemIndex],\n          quantity: newItems[existingItemIndex].quantity + quantity,\n        };\n      } else {\n        // Add new item\n        newItems = [\n          ...prevCart.items,\n          {\n            id: product.id,\n            name: product.name,\n            price: product.price,\n            image: product.image,\n            unit: product.unit,\n            quantity: quantity,\n            category: product.category,\n          },\n        ];\n      }\n\n      const { total, count } = calculateTotals(newItems);\n\n      toast({\n        title: \"Added to Cart\",\n        description: `${product.name} has been added to your cart`,\n        variant: \"default\",\n      });\n\n      return { items: newItems, total, count };\n    });\n  };\n\n  // Update item quantity\n  const updateQuantity = (productId, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n\n    setCart((prevCart) => {\n      const newItems = prevCart.items.map((item) =>\n        item.id === productId ? { ...item, quantity: newQuantity } : item\n      );\n\n      const { total, count } = calculateTotals(newItems);\n      return { items: newItems, total, count };\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = (productId) => {\n    setCart((prevCart) => {\n      const newItems = prevCart.items.filter((item) => item.id !== productId);\n      const { total, count } = calculateTotals(newItems);\n\n      toast({\n        title: \"Removed from Cart\",\n        description: \"Item has been removed from your cart\",\n        variant: \"default\",\n      });\n\n      return { items: newItems, total, count };\n    });\n  };\n\n  // Clear entire cart\n  const clearCart = () => {\n    setCart({ items: [], total: 0, count: 0 });\n    toast({\n      title: \"Cart Cleared\",\n      description: \"All items have been removed from your cart\",\n      variant: \"default\",\n    });\n  };\n\n  // Get item quantity by product ID\n  const getItemQuantity = (productId) => {\n    const item = cart.items.find((item) => item.id === productId);\n    return item ? item.quantity : 0;\n  };\n\n  // Check if item is in cart\n  const isInCart = (productId) => {\n    return cart.items.some((item) => item.id === productId);\n  };\n\n  const value = {\n    cart,\n    loading,\n    addToCart,\n    updateQuantity,\n    removeFromCart,\n    clearCart,\n    getItemQuantity,\n    isInCart,\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}