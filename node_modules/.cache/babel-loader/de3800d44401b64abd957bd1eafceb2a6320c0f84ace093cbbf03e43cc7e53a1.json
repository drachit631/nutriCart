{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import{toast}from\"../components/ui/use-toast\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[token,setToken]=useState(localStorage.getItem(\"token\"));const navigate=useNavigate();// Check if user is authenticated on mount\nuseEffect(()=>{const checkAuth=async()=>{if(token){try{const response=await fetch(\"/api/auth/me\",{headers:{Authorization:\"Bearer \".concat(token),\"Content-Type\":\"application/json\"}});if(response.ok){const data=await response.json();setUser(data.user);}else{// Token is invalid, remove it\nlocalStorage.removeItem(\"token\");setToken(null);}}catch(error){console.error(\"Auth check error:\",error);localStorage.removeItem(\"token\");setToken(null);}}setLoading(false);};checkAuth();},[token]);const login=async(email,password)=>{try{const response=await fetch(\"/api/auth/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,password})});const data=await response.json();if(response.ok){setUser(data.user);setToken(data.token);localStorage.setItem(\"token\",data.token);toast({title:\"Success!\",description:\"Welcome back to NutriCart+!\"});navigate(\"/dashboard\");return{success:true};}else{toast({title:\"Login Failed\",description:data.message||\"Invalid credentials\",variant:\"destructive\"});return{success:false,message:data.message};}}catch(error){console.error(\"Login error:\",error);toast({title:\"Error\",description:\"Something went wrong. Please try again.\",variant:\"destructive\"});return{success:false,message:\"Network error\"};}};const signup=async userData=>{try{const response=await fetch(\"/api/auth/register\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(userData)});const data=await response.json();if(response.ok){setUser(data.user);setToken(data.token);localStorage.setItem(\"token\",data.token);toast({title:\"Welcome to NutriCart+!\",description:\"Your account has been created successfully.\"});navigate(\"/dashboard\");return{success:true};}else{toast({title:\"Signup Failed\",description:data.message||\"Something went wrong\",variant:\"destructive\"});return{success:false,message:data.message};}}catch(error){console.error(\"Signup error:\",error);toast({title:\"Error\",description:\"Something went wrong. Please try again.\",variant:\"destructive\"});return{success:false,message:\"Network error\"};}};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem(\"token\");toast({title:\"Logged Out\",description:\"You have been logged out successfully.\"});navigate(\"/\");};const updateProfile=async profileData=>{try{const response=await fetch(\"/api/auth/profile\",{method:\"PUT\",headers:{Authorization:\"Bearer \".concat(token),\"Content-Type\":\"application/json\"},body:JSON.stringify(profileData)});const data=await response.json();if(response.ok){setUser(data.user);toast({title:\"Profile Updated\",description:\"Your profile has been updated successfully.\"});return{success:true};}else{toast({title:\"Update Failed\",description:data.message||\"Something went wrong\",variant:\"destructive\"});return{success:false,message:data.message};}}catch(error){console.error(\"Profile update error:\",error);toast({title:\"Error\",description:\"Something went wrong. Please try again.\",variant:\"destructive\"});return{success:false,message:\"Network error\"};}};const changePassword=async(currentPassword,newPassword)=>{try{const response=await fetch(\"/api/auth/change-password\",{method:\"POST\",headers:{Authorization:\"Bearer \".concat(token),\"Content-Type\":\"application/json\"},body:JSON.stringify({currentPassword,newPassword})});const data=await response.json();if(response.ok){toast({title:\"Password Changed\",description:\"Your password has been updated successfully.\"});return{success:true};}else{toast({title:\"Password Change Failed\",description:data.message||\"Something went wrong\",variant:\"destructive\"});return{success:false,message:data.message};}}catch(error){console.error(\"Password change error:\",error);toast({title:\"Error\",description:\"Something went wrong. Please try again.\",variant:\"destructive\"});return{success:false,message:\"Network error\"};}};const value={user,token,loading,login,signup,logout,updateProfile,changePassword,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","toast","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","navigate","checkAuth","response","fetch","headers","Authorization","concat","ok","data","json","removeItem","error","console","login","email","password","method","body","JSON","stringify","setItem","title","description","success","message","variant","signup","userData","logout","updateProfile","profileData","changePassword","currentPassword","newPassword","value","isAuthenticated","Provider"],"sources":["C:/Users data/Rachit/NutriCart Project/nutriCart/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"../components/ui/use-toast\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\r\n  const navigate = useNavigate();\r\n\r\n  // Check if user is authenticated on mount\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await fetch(\"/api/auth/me\", {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setUser(data.user);\r\n          } else {\r\n            // Token is invalid, remove it\r\n            localStorage.removeItem(\"token\");\r\n            setToken(null);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Auth check error:\", error);\r\n          localStorage.removeItem(\"token\");\r\n          setToken(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, [token]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch(\"/api/auth/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setUser(data.user);\r\n        setToken(data.token);\r\n        localStorage.setItem(\"token\", data.token);\r\n        toast({\r\n          title: \"Success!\",\r\n          description: \"Welcome back to NutriCart+!\",\r\n        });\r\n        navigate(\"/dashboard\");\r\n        return { success: true };\r\n      } else {\r\n        toast({\r\n          title: \"Login Failed\",\r\n          description: data.message || \"Invalid credentials\",\r\n          variant: \"destructive\",\r\n        });\r\n        return { success: false, message: data.message };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Something went wrong. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return { success: false, message: \"Network error\" };\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    try {\r\n      const response = await fetch(\"/api/auth/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setUser(data.user);\r\n        setToken(data.token);\r\n        localStorage.setItem(\"token\", data.token);\r\n        toast({\r\n          title: \"Welcome to NutriCart+!\",\r\n          description: \"Your account has been created successfully.\",\r\n        });\r\n        navigate(\"/dashboard\");\r\n        return { success: true };\r\n      } else {\r\n        toast({\r\n          title: \"Signup Failed\",\r\n          description: data.message || \"Something went wrong\",\r\n          variant: \"destructive\",\r\n        });\r\n        return { success: false, message: data.message };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Signup error:\", error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Something went wrong. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return { success: false, message: \"Network error\" };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    toast({\r\n      title: \"Logged Out\",\r\n      description: \"You have been logged out successfully.\",\r\n    });\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await fetch(\"/api/auth/profile\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(profileData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setUser(data.user);\r\n        toast({\r\n          title: \"Profile Updated\",\r\n          description: \"Your profile has been updated successfully.\",\r\n        });\r\n        return { success: true };\r\n      } else {\r\n        toast({\r\n          title: \"Update Failed\",\r\n          description: data.message || \"Something went wrong\",\r\n          variant: \"destructive\",\r\n        });\r\n        return { success: false, message: data.message };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Profile update error:\", error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Something went wrong. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return { success: false, message: \"Network error\" };\r\n    }\r\n  };\r\n\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      const response = await fetch(\"/api/auth/change-password\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ currentPassword, newPassword }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        toast({\r\n          title: \"Password Changed\",\r\n          description: \"Your password has been updated successfully.\",\r\n        });\r\n        return { success: true };\r\n      } else {\r\n        toast({\r\n          title: \"Password Change Failed\",\r\n          description: data.message || \"Something went wrong\",\r\n          variant: \"destructive\",\r\n        });\r\n        return { success: false, message: data.message };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Password change error:\", error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Something went wrong. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return { success: false, message: \"Network error\" };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    signup,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n    isAuthenticated: !!user,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}